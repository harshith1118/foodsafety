// Test more specific searches to see if we can get better nutrition data\nimport axios from 'axios';\n\nasync function testSpecificSearches() {\n  const queries = ['apple', 'raw apple', 'apple fruit', 'banana', 'chicken breast'];\n  \n  for (const query of queries) {\n    console.log(`\\n=== Testing search for: ${query} ===`);\n    \n    try {\n      const url = `https://world.openfoodfacts.org/cgi/search.pl?search_terms=${encodeURIComponent(query)}&action=process&json=1&page_size=3`;\n      const response = await axios.get(url);\n      \n      if (response.data && Array.isArray(response.data.products) && response.data.products.length > 0) {\n        console.log(`Found ${response.data.products.length} products:`);\n        \n        response.data.products.forEach((product, index) => {\n          console.log(`${index + 1}. ${product.product_name || product.generic_name || 'Unnamed product'}`);\n          \n          if (product.nutriments) {\n            // Count how many nutrients we have\n            const nutrimentsCount = Object.keys(product.nutriments).length;\n            console.log(`   Nutrients available: ${nutrimentsCount}`);\n            \n            // Check for specific vitamins/minerals\n            const hasVitamins = Object.keys(product.nutriments).some(key => \n              key.includes('vitamin') || key.includes('Vitamin')\n            );\n            const hasMinerals = Object.keys(product.nutriments).some(key => \n              ['calcium', 'iron', 'magnesium', 'phosphorus', 'potassium', 'zinc', 'copper', 'manganese'].some(mineral => \n                key.includes(mineral)\n              )\n            );\n            \n            console.log(`   Has vitamins: ${hasVitamins}`);\n            console.log(`   Has minerals: ${hasMinerals}`);\n            \n            // Show some key nutrients\n            console.log(`   Protein: ${product.nutriments.proteins_100g || 'N/A'}`);\n            console.log(`   Carbs: ${product.nutriments.carbohydrates_100g || 'N/A'}`);\n            console.log(`   Fat: ${product.nutriments.fat_100g || 'N/A'}`);\n            console.log(`   Calories: ${product.nutriments['energy-kcal_100g'] || product.nutriments.energy_100g || 'N/A'}`);\n          }\n        });\n      } else {\n        console.log('No products found');\n      }\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  }\n}\n\ntestSpecificSearches();