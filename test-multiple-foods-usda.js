// Test multiple foods with our corrected USDA implementation\nasync function testMultipleFoods() {\n  const foods = ['raw apple', 'raw banana', 'raw chicken breast', 'raw salmon'];\n  \n  for (const food of foods) {\n    console.log(`\\n=== Testing: ${food} ===`);\n    \n    try {\n      const url = `https://api.nal.usda.gov/fdc/v1/foods/search?query=${encodeURIComponent(food)}&pageSize=1&api_key=DEMO_KEY`;\n      const response = await fetch(url);\n      \n      if (response.ok) {\n        const data = await response.json();\n        \n        if (data.foods && data.foods.length > 0) {\n          const foodItem = data.foods[0];\n          console.log('üçé Food:', foodItem.description);\n          \n          if (foodItem.foodNutrients) {\n            // Extract nutrients using our implementation\n            const nutrients = {\n              protein: 0,\n              carbs: 0,\n              fat: 0,\n              fiber: 0,\n              sugar: 0,\n              sodium: 0,\n              vitamins: {},\n              minerals: {}\n            };\n            \n            let calories = 0;\n            \n            // Process all nutrients\n            for (const foodNutrient of foodItem.foodNutrients) {\n              const nutrientName = foodNutrient.nutrientName || '';\n              const value = parseFloat(foodNutrient.value) || 0;\n              const unit = foodNutrient.unitName || '';\n              \n              // Skip if value is 0 or negative\n              if (value <= 0) {\n                continue;\n              }\n              \n              // Macronutrients\n              if (nutrientName.includes('Protein')) {\n                nutrients.protein = value;\n              } else if (nutrientName.includes('Carbohydrate') && nutrientName.includes('difference')) {\n                nutrients.carbs = value;\n              } else if (nutrientName.includes('Total lipid') || nutrientName.includes('fat')) {\n                nutrients.fat = value;\n              } else if (nutrientName.includes('Fiber')) {\n                nutrients.fiber = value;\n              } else if (nutrientName.includes('Sugars') && !nutrientName.includes('added')) {\n                nutrients.sugar = value;\n              } else if (nutrientName.includes('Sodium')) {\n                nutrients.sodium = value;\n              } else if (nutrientName.includes('Energy') && unit === 'KCAL') {\n                calories = value;\n              }\n              // Vitamins\n              else if (nutrientName.includes('Vitamin C') || nutrientName.includes('Ascorbic acid')) {\n                nutrients.vitamins['Vitamin C'] = value;\n              } else if (nutrientName.includes('Vitamin A') && !nutrientName.includes('IU')) {\n                nutrients.vitamins['Vitamin A'] = value;\n              } else if (nutrientName.includes('Vitamin E')) {\n                nutrients.vitamins['Vitamin E'] = value;\n              } else if (nutrientName.includes('Vitamin D')) {\n                nutrients.vitamins['Vitamin D'] = value;\n              } else if (nutrientName.includes('Vitamin K')) {\n                nutrients.vitamins['Vitamin K'] = value;\n              } else if (nutrientName.includes('Thiamin') || nutrientName.includes('Vitamin B1')) {\n                nutrients.vitamins['Vitamin B1'] = value;\n              } else if (nutrientName.includes('Riboflavin') || nutrientName.includes('Vitamin B2')) {\n                nutrients.vitamins['Vitamin B2'] = value;\n              } else if (nutrientName.includes('Niacin') || nutrientName.includes('Vitamin B3')) {\n                nutrients.vitamins['Vitamin B3'] = value;\n              } else if (nutrientName.includes('Vitamin B6')) {\n                nutrients.vitamins['Vitamin B6'] = value;\n              } else if (nutrientName.includes('Folate') && !nutrientName.includes('DFE') && !nutrientName.includes('food')) {\n                nutrients.vitamins['Folate'] = value;\n              } else if (nutrientName.includes('Vitamin B12')) {\n                nutrients.vitamins['Vitamin B12'] = value;\n              } else if (nutrientName.includes('Pantothenic')) {\n                nutrients.vitamins['Pantothenic Acid'] = value;\n              } else if (nutrientName.includes('Biotin') || nutrientName.includes('Vitamin B7')) {\n                nutrients.vitamins['Biotin'] = value;\n              }\n              // Minerals\n              else if (nutrientName.includes('Calcium')) {\n                nutrients.minerals['Calcium'] = value;\n              } else if (nutrientName.includes('Iron')) {\n                nutrients.minerals['Iron'] = value;\n              } else if (nutrientName.includes('Magnesium')) {\n                nutrients.minerals['Magnesium'] = value;\n              } else if (nutrientName.includes('Phosphorus')) {\n                nutrients.minerals['Phosphorus'] = value;\n              } else if (nutrientName.includes('Potassium')) {\n                nutrients.minerals['Potassium'] = value;\n              } else if (nutrientName.includes('Sodium') && !nutrients.sodium) {\n                nutrients.sodium = value;\n              } else if (nutrientName.includes('Zinc')) {\n                nutrients.minerals['Zinc'] = value;\n              } else if (nutrientName.includes('Copper')) {\n                nutrients.minerals['Copper'] = value;\n              } else if (nutrientName.includes('Manganese')) {\n                nutrients.minerals['Manganese'] = value;\n              } else if (nutrientName.includes('Selenium')) {\n                nutrients.minerals['Selenium'] = value;\n              } else if (nutrientName.includes('Fluoride')) {\n                nutrients.minerals['Fluoride'] = value;\n              } else if (nutrientName.includes('Iodine')) {\n                nutrients.minerals['Iodine'] = value;\n              }\n            }\n            \n            // Fallback calories calculation if not provided\n            if (calories === 0) {\n              calories = Math.round(\n                (nutrients.protein * 4) + \n                (nutrients.carbs * 4) + \n                (nutrients.fat * 9)\n              );\n            }\n            \n            console.log('üìä Calories:', calories);\n            console.log('ü•© Protein:', nutrients.protein, 'g');\n            console.log('üçû Carbs:', nutrients.carbs, 'g');\n            console.log('ü•ë Fat:', nutrients.fat, 'g');\n            console.log('Vitamins:', Object.keys(nutrients.vitamins).length);\n            console.log('Minerals:', Object.keys(nutrients.minerals).length);\n          }\n        }\n      }\n    } catch (error) {\n      console.log('‚ùå Error:', error.message);\n    }\n  }\n}\n\ntestMultipleFoods();